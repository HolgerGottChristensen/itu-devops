name: CI

# Controls when the workflow will run
on:
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: build and push docker
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: |
          echo "LOGIN"
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          echo "BUILD"
          docker build -t ${{ secrets.DOCKER_USERNAME }}/minitwit-elixir:latest . -f docker/minitwit-elixir/Dockerfile
          echo "PUSH"
          docker push ${{ secrets.DOCKER_USERNAME }}/minitwit-elixir:latest
  test:
    name: run tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: build and run tests
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/minitwit-elixir-test . -f docker/minitwit-elixir-test/Dockerfile
        docker-compose up --abort-on-container-exit test
        
  push:
    name: push to release branch
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Push
      run: |
        git config --global user.email "endrit1999@hotmail.com"
        git config --global user.name "Github CI"
        git status
        git fetch origin
        git branch -v -a
        git switch -c release origin/release
        git merge --allow-unrelated-histories --no-ff --no-commit --strategy-option theirs master
        git diff --quiet && git diff --staged --quiet || git commit -m"Commit for release"
        git status
        git push
      
  deploy:
    name: deploy new version
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: deploy script
      run: |
        ssh -o "StrictHostKeyChecking no" -i ${{ secrets.DO_SSH_KEY }} ${{ secrets.MT_USER }}@${{ secrets.MT_SERVER }}
        cd itu-devops
        git pull
        git status
        docker-compose pull web
        docker-compose up -d web
